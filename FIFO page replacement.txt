FIFO PAGE REPLACEMENT :
public elass FIFO (

public static void main(String[] args) throws IOException

{

BufferedReader br = new BufferedReader (new
InputStreamReader (System.in) );
int frames, pointer = 0, hit = 0, fault = 0,ref len;

int buffer[];
int reference[];
int mem layout[][];

System.out.println("Please enter the number of Frames: ");
frames = Integer.parselInt (br.readLine());

System.out.println("Please enter the length of the Reference
string: ");
ref len = Integer.parseInt (br.readLine());

reference = new int[ref len];

mem layout = new int[ref len] [frames];

buffer = new int[frames];

for(int j = 0; j < frames; j++)
buffer[j] = -1;

System.out.println("Please enter the reference string: ");
for(int i = 0; i < ref len; i++)
{

reference[i] = Integer.parselInt (br.readLine());

}
System.out.println();

for(int i = 0; i < ref len; i++)
{
int search = -1;
for(int j = 0; 3 < frames; j++)
{
if (buffer[j] == reference[i])
{
search = J;
hitt++;
break;
}
}
if (search == -1)
{
buffer[pointer] = reference[i];
fault++;
pointer++;
if (pointer == frames)
pointer = 0;

}
for(int j = 0; 3 < frames; J++)
}

output:-

mem _layout[i][j] = buffer[j];
}

for(int 1 = 0; 1 < frames; itt)
{
for(int j = 0; j < ref len; j++)
System. out.printfÂ£("%3d ",mem layout[j] [1]);
System. out.println();
}

System.out.println("The number of Hits: " + hit);
System.out.println ("Hit Ratio: " + (float) ((float)hit/ref len));
System.out.println("The number of Faults: " + fault);

Please enter the number of Frames:

3

Please enter the length of the Reference string:

20

Please enter the reference string:

7

FOAIPONFNWOWNBDOWONE OC

number of Hits: 5
Ratio: 0.25
number of Faults: 15
LRU Page Replacement algorithm in java

code in Java:

import java.io.*;
import java.util.*;

public class LRU {

public static void main(String[] args) throws IOException
{
BufferedReader br = new BufferedReader (new
InputStreamReader (System.in));
int frames,pointer = 0, hit = 0, fault = 0,ref len;
Boolean isFull = false;

int buffer[];
ArrayList<Integer> stack = new ArrayList<Integer>();
int reference[];

int mem layout[][];
System.out.println("Please enter the number of Frames: ");
frames = Integer.parselInt (br.readLine());

System.out.println("Please enter the length of the Reference string:
ref len = Integer.parselInt (br.readLine());

reference = new int[ref len];

mem layout = new int[ref len] [frames];

buffer = new int[frames];

for(int j = 0; j < frames; j++)
buffer[j] = -1;

System.out.println("Please enter the reference string: ");
for(int i = 0; i < ref len; i++)
{
reference[i] = Integer.parselInt (br.readLine());
}
System.out.printlin();
for(int i = 0; i < ref len; i++)
{
if(stack.contains (reference[i]))
{

stack.remove (stack.indexOf(reference[i]));

}

stack.add(reference[i]);

int search = -1;
for(int j = 0; j < frames; j++)
{
if (buffer[j] == reference[i])
{
search = j;
hit+t++;

break;
}
}
if(search == -1)

{

Lf (isFull)
{
int min loc = ref len;
for(int j = 0; j < frames; j++)

{
if (stack.contains (buffer[j]))
{
int temp = stack.indexOf (buffer[j]);
if (temp < min loc)

{

min loc = temp;
pointer = j;
}
}
}
}
buffer[pointer] = reference[i];
fault++;
pointert+t;
if (pointer == frames)
{
pointer = 0;
isFull = true;
}
}
for(int j = 0; j < frames; j++)
mem layout[i][j] = buffer[j];
}
for(int i = 0; i < frames; i++)
{
for(int j = 0; 3 < ref len; j++)

System.out.printf ("33d ",mem layout[j][i]);
System.out.println();
}

System.out.printin("The number of Hits: " + hit);
System.out.println("Hit Ratio: " + (float) ((float)hit/ref len));
System.out.println("The number of Faults: " + fault);

}
output:-

Please enter the number of Frames:

3

Please enter the length of the Reference string:
20

Please enter the reference string:

7

NRO
PNHWOWN BF OWO

Por rRPOoOnN

The number of Hits: 8
Hit Ratio: 0.4
The number of Faults: 12
Optimal Page Replacement algorithm in java

code in Java:

import
import
import
public

java.io.BufferedReader;
java.io. 1lOException;
java.io. InputStreamReader;
class OptimalReplacement {

public static void main(String[] args) throws IOException

{

BufferedReader br = new BufferedReader (new

InputStreamReader (System.in));

int frames, pointer = 0, hit = 0, fault = 0,ref len;
boolean isFull = false;

int buffer[];

int reference[];

int mem layout[][];

System.out.println("Please enter the number of Frames: ");
frames = Integer.parselInt (br.readLine());

System.out.println("Please enter the length of the Reference string:
ref len = Integer.parselInt (br.readLine());

reference = new int[ref len];

mem layout = new int[ref len] [frames];

buffer = new int[frames];

for(int j = 0; j < frames; j++)
buffer[j] = -1;

System.out.println("Please enter the reference string: ");
for(int i = 0; i < ref len; i++)
{
reference[i] = Integer.parseInt (br.readLine());
}
System.out.printlin();
for(int i = 0; i < ref len; i++)
{
int search = -1;
for(int j = 0; j < frames; j++)
{
if (buffer[j] == reference[i])
{
search = j;
hitt++;
break;
}
}
if(search == -1)
{
if (isFull)
{
int index[] = new int[frames];
boolean index flag[] = new boolean[frames];
output:-

for(int 7 =i+ 1; 3 < ref len; j++)
{
for(int k = 0; k < frames; k++)
{
if ((reference[j] == buffer[k]) && (index flag[k] == false))
{
index[k] = j;
index flag[k] = true;
break;
}
}
}
int max = index[0];
pointer = 0;
if (max == 0)
max = 200;
for(int j = 0; j < frames; j++)
{
if (index[j] == 0)
index[j] = 200;
if (index[j] > max)
{
max = index[j];
pointer = j;
}
}
}

buffer[pointer] = reference[i];
fault++;
if (!isFull)
{
pointert+t;

if (pointer == frames)

{

pointer = 0;

isFull = true;

}

for(int j = 0; j < frames; j++)
mem layout[i][j] = buffer[j];
}
for(int i = 0; i < frames; i++)
{
for(int j7 = 0; 3 < ref len; j++)

System.out.printf ("33d ",mem layout[j][i]);
System.out.println();
}

System.out.printin("The number of Hits: " + hit);
System.out.println("Hit Ratio: " + (float) ((float)hit/ref len));
System.out.println("The number of Faults: " + fault);
Please enter the number of Frames:

3

Please enter the length of the Reference string:
20

Please enter the reference string:

ORPNWNER

PAWRPWRHAONDAEN

Woe Nh

The number of Hits: 11
Hit Ratio: 0.55
The number of Faults: 9
